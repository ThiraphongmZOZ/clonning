# main.py

from modules.recorder import record_audio
from modules.stt import transcribe_audio, load_whisper_model
from modules.translator_m2m100 import load_translation_model
from modules.tts_xtts import speak_with_xtts, load_xtts_model
import torch, os
from torch.serialization import add_safe_globals#‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
from TTS.tts.configs.xtts_config import XttsConfig
# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
whisper_model = load_whisper_model()
translator = load_translation_model()
add_safe_globals([XttsConfig])
tts_model = load_xtts_model()

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á
audio_path = record_audio(duration=5)

# ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
text_thai = transcribe_audio(audio_path, whisper_model)

# ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏©‡∏≤
text_en = translator(text_thai, "thai", "english")
text_ja = translator(text_thai, "thai", "japanese")
text_zh = translator(text_thai, "thai", "chinese")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡πâ‡∏ß
os.makedirs("outputs", exist_ok=True)
speak_with_xtts(tts_model, text_en, audio_path, lang="en", output_path="outputs/voice_en.wav")
speak_with_xtts(tts_model, text_ja, audio_path, lang="ja", output_path="outputs/voice_ja.wav")
speak_with_xtts(tts_model, text_zh, audio_path, lang="zh", output_path="outputs/voice_zh.wav")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
print("\nüìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö (‡πÑ‡∏ó‡∏¢):", text_thai)
print("üåç ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©:", text_en)
print("üå∏ ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô:", text_ja)
print("üêâ ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏µ‡∏ô:", text_zh)
